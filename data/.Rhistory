`my_age` <- 20
`my_name` <- Khayla
`my_name` <- (Khayla)
`my_age` <- 20
install.packages ("stringr")
`my_age` <- 20
`my_name` <- Khayla
`my_name` <- "Khayla"
'minutes_in_a_hour' <- 60
my_age <- 20
my_name <- "Khayla"
minutes_in_a_hour <- 60
hours_in_a_day <- 24
minutes_in_a_day <- minutes_in_a_hour * hours_in_a_day
days_in_a_year <- 365
hours_in_a_year <- hours_in_a_day * days_in_a_year
more_minutes_than_hours <- hours_in_a_day > minutes_in_a_day
more_minutes_than_hours <-hours_in_a_year > minutes_in_a_day
make_introduction(`Khayla`, `20`)
make_introduction (`Khayla`, `20`)
make_introduction <- "Hello, my name is {name}, and I'm {age} years old."
make_introduction (`name`, `age`)
make_introduction <- "Hello, my name is {my_name}, and I'm {my_age} years old."
make_introduction <- "Hello, my name is my_name, and I'm my_age years old."
install.packages ("stringr")
make_introduction <- "Hello, my name is 'my_name', and I'm 'my_age' years old."
make_introduction <- "Hello, my name is (name), and I'm (age) years old."
make_introduction <- "Hello, my name is (my_name), and I'm (my_age) years old."
make_introduction <- "Hello, my name is (my_name), and I'm (my_age) years old."
make_introduction <- "Hello, my name is", my_name, "and I'm", my_age "years old."
make_introduction <- paste("Hello", "my", "name", "is", "my_name")
my_age
make_introduction <- paste("Hello", "my", "name", "is", "my_name ")
library(stringr)
paste("There are", students_per_section,
"students in each section of INFO 201")
make_introduction <- paste("Hello", "my", "name", "is", my_name, "and", "I'm", my_age, "years", "old")
my_intro <- make_introduction
make_introduction <- paste("Hello", "my", "name", "is", my_name, "and,", "I'm", my_age, "years", "old")
my_intro <- make_introduction
casual_intro <- paste("Hey,", "I'm", my_intro)
casual_intro <- paste("Hey,", "I'm", my_name, "and,", "I'm", my_age)
casual_intro <- paste(my_intro[c(1,2,3)],collapse = "")
casual_intro <- paste(my_intro, collaspe= "Hello", "my", "name",)
casual_intro <- paste(my_intro, collaspe= "Hello", "my", "name")
casual_intro <- paste(my_intro["Hello", "my", "name", "is"], collapse= "" )
casual_intro <- sub("Hello, my name is",)
casual_intro <- sub("Hello, my name is", "Hi, I'm")
casual_intro <- sub ("Hello, my name is", "Hi, I'm")
casual_intro <- gsub ("Hello, my name is", "Hi, I'm")
casual_intro <- sub ("Hello my name is", "Hi, I'm", my_intro)
# Working with Functions
make_introduction <- paste("Hello", "my", "name", "is", my_name, "and,", "I'm", my_age, "years", "old")
loud_intro <- toupper(my_intro)
quiet_intro <- tolower(my_intro)
capitalized_intro <- str_to_title(my_intro)
occurrences <- str_count(my_intro, "e")
double(occurrences)
double(length = 3L)
double <- readline(prompt = "45")
print(paste(double * 2))
value + value
number * 2
double <- function(minutes_in_a_day) {
value + value
}
double <- function(K) {
value + value
}
minutes_in_two_days <- double(minutes_in_a_day)
minutes_in_two_days <- double(k
)
minutes_in_two_days <- double(k)
save.image("~/Desktop/a2-khaylarooks/Assignment 2.RData")
load("/Users/khaylarooks/Desktop/a2-khaylarooks/Assignment 2.RData")
data1<-read.csv("by_area_hiv_est_from_1990-present.csv", stringsAsFactors = FALSE)
data1<-data1[-(1:4),]
data1<-read.csv("by_area_hiv_est_from_1990-present.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/GroupBF1")
data1<-read.csv("by_area_hiv_est_from_1990-present.csv", stringsAsFactors = FALSE)
data1<-data1[-(1:4),]
data1<-read.csv("by_area_hiv_est_from_1990-present.csv", stringsAsFactors = FALSE)
data1<-read.csv("by_area_hiv_est_from_1990-present.csv", stringsAsFactors = FALSE)
data1<-read.csv("by_area_hiv_est_from_1990-present.csv", stringsAsFactors = FALSE)
data1<-read.csv("by_area_hiv_est_from_1990-present.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/GroupBF1/data")
data1<-read.csv("by_area_hiv_est_from_1990-present.csv", stringsAsFactors = FALSE)
data1<-data1[-(1:4),]
data1<-data1[,-2]
[1,]
colnames(data1)[1:2]<-c("Year","Location")
View(data1)
data2<-read.csv("by_area_hiv_treatment_est_from_1990-present.csv", stringsAsFactors = FALSE)
View(data2)
## Charts (**30 points**, 10 points each) (Khayla & An)
For each chart, you will be evaluated based on the following (remember, each chart must be a **different chart type**):
#testing
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = data$long, lat = data$lat, radius = data$total,
label = lapply(details, htmltools::HTML)
histogram <- ggplot(mpg, aes(location))
g + geom_bar(aes(fill=), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="People Receieving HAART Treatment")
pie <- ggplot(mpg, aes(x = "", fill = factor(class))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of Denographics",
caption="Benefiting from HAART Treatment")
- A description of what the chart attempts to answer/understand (**1 point**)
- Selected the appropriate chart type / graphical encoding based on the question of interest and the data type(s) of the features (**3 point**)
- Appropriate labels/legends, depending on your chart type (**4 points**). Including, but not limited to:
- X axis label (if there's an x axis)
- Y axis label (if there's an y axis)
histogram <- ggplot(data1, aes(location))
## Charts (**30 points**, 10 points each) (Khayla & An)
For each chart, you will be evaluated based on the following (remember, each chart must be a **different chart type**):
# Where in the world is HAART therapy most accessible? (Interactive Map Chart)
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = data$long, lat = data$lat, radius = data$total,
label = lapply(details, htmltools::HTML)
# Who is receiving HAART therapy? (Histogram on Categorical Variable) data 2
histogram <- qplot(data1$Location, geom="histogram"))
## Charts (**30 points**, 10 points each) (Khayla & An)
For each chart, you will be evaluated based on the following (remember, each chart must be a **different chart type**):
# Where in the world is HAART therapy most accessible? (Interactive Map Chart)
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = data$long, lat = data$lat, radius = data$total,
label = lapply(details, htmltools::HTML)
# Who is receiving HAART therapy? (Histogram on Categorical Variable) data 2
histogram <- qplot(data1$Location, geom= "histogram"))
## Charts (**30 points**, 10 points each) (Khayla & An)
For each chart, you will be evaluated based on the following (remember, each chart must be a **different chart type**):
# Where in the world is HAART therapy most accessible? (Interactive Map Chart)
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = data$long, lat = data$lat, radius = data$total,
label = lapply(details, htmltools::HTML)
# Who is receiving HAART therapy? (Histogram on Categorical Variable) data 2
qplot(data1$Location, geom= "histogram"))
## Charts (**30 points**, 10 points each) (Khayla & An)
For each chart, you will be evaluated based on the following (remember, each chart must be a **different chart type**):
# Where in the world is HAART therapy most accessible? (Interactive Map Chart)
g <- ggplot(mpg, aes(manufacturer))
library(ggplot2)
## Charts (**30 points**, 10 points each) (Khayla & An)
For each chart, you will be evaluated based on the following (remember, each chart must be a **different chart type**):
# Where in the world is HAART therapy most accessible? (Interactive Map Chart)
g <- ggplot(mpg, aes(manufacturer))
View(g)
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = data$long, lat = data$lat, radius = data$total,
label = lapply(details, htmltools::HTML)
# Who is receiving HAART therapy? (Histogram on Categorical Variable) data 2
qplot(data1$Location, geom= "histogram"))
p <-ggplot(data2, aes(X.12, X.13))
View(p)
View(p)
# Who is receiving HAART therapy? (Bar Graph) data 2
bar_graph <- data.frame(X.12, X.13)
merge_hiv_df <- merge(x=hiv_df1, y=hiv_df2, by=c("Year","Location"))
data1<-read.csv("by_area_hiv_est_from_1990-present.csv", stringsAsFactors = FALSE)
data2<-read.csv("by_area_hiv_treatment_est_from_1990-present.csv", stringsAsFactors = FALSE)
data2<-data2[-(1:4),]
data2<-data2[,-2]
colnames(data2)<-data2[1,]
colnames(data2)[1:2]<-c("Year","Location")
data2<-data2[-1,]
dim(data1)
dim(data2)
intersect(colnames(data1),colnames(data2))
data<-merge(data1,data2,by=c("Year","Location"))
=======
hiv_df1 <- read.csv("by_area_hiv_est_from_1990-present.csv", stringsAsFactors = FALSE)
hiv_df2 <- read.csv("by_area_hiv_treatment_est_from_1990-present.csv", stringsAsFactors = FALSE)
