<<<<<<< HEAD
year <- merge_hiv_df %>%
group_by(Year) %>%
summarize(Total AIDS Death = max(Total AIDS Death)) %>%
select(Total_death)
library(lintr)
library(dplyr)
library(ggplot2)
library(shiny)
library(styler)
"http://apps.who.int/gho/data/node.home"
"http://apps.who.int/gho/data/node.home"
hiv_df1 <- read.csv("by_area_hiv_est_from_1990-present.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/GroupBF1/data")
=======
- Comments are used throughout to express purpose of each section (**1 point**)
Report is professionally formatted, including (but not limtted to):
- Using headers to delineate between sections (**1 point**)
- Removing any warnings/messages from your script in the report (**1 point**)
## Code clarity (**5 points**) (Khayla & Anura)
To earn full points, you must not have any `lintr()` errors.
View(hiv_df2)
View(hiv_df2_noNA)
View(hiv_df2_noNA)
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
mutate(people_recieving_HAART) %>%
summarise(sum(Number_of_children_(0-14),receiving_ART + Number_of_peple_all_ages_receiving_ART))
receiving <- hiv_df2_noNA %>%
filter(Year == "2018")
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
mutate(people_recieving_HAART)
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Percent of adults(15+) living with HIV receiving ART`) %>%
top_n(9)
names(hiv_df2_noNA)[4] <- "Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Percent of adults(15+) living with HIV receiving ART`) %>%
top_n(9)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Percent of adults(15+) living with HIV receiving ART`) %>%
top_n(9)
View(hiv_df2)
View(receiving)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Percent of adults(15+) living with HIV receiving ART`) %>%
top_n(9)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
top_n(9)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018")
View(demographics)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
filter(Adult Percent receiving == max(Adult Percent receiving)
top_n(9)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
filter(Adult Percent receiving == max(Adult Percent receiving) %>%
top_n(9)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
filter(Adult Percent receiving == max(Adult Percent receiving)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
arrange(Adult Percent receiving)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
arrange('Adult Percent receiving')
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
arrange(`Adult Percent receiving``)
View(receiving)
View(receiving)
View(receiving)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
arrange(`Adult Percent receiving``) %>%
top_n(10)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
top_n(10)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
top_n(10)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
top_n(4)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
top_n(9)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
desc(9)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
desc()
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
arrange(receiving, desc(`Adult Percent receiving`)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`)
names(hiv_df2_noNA)[4] <- "Adult Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
top_n(10)
names(hiv_df2_noNA)[4] <- "Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
top_n(10)
names(hiv_df2_noNA)[4] <- "Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Adult Percent receiving`) %>%
top_n(10)
names(hiv_df2_noNA)[4] <- "Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Percent receiving`) %>%
top_n(10)
names(hiv_df2_noNA)[4] <- "Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Percent receiving`)
receiving, desc(Percent receing))
hightolow <- receiving <- arrange(receiving, desc(Percent receing))
hightolow <- receiving <- arrange(receiving, desc(Percent receving))
hightolow <- receiving <- arrange(receiving, desc(Percent receiving))
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = data$long, lat = data$lat, radius = data$total,
label = lapply(details, htmltools::HTML)
# Who is receiving HAART therapy? (Bar Graph) data 2
names(hiv_df2_noNA)[4] <- "Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Percent receiving`) %>%
top_n(10)
hightolow <- receiving <- desc(Percent receiving))
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = data$long, lat = data$lat, radius = data$total,
label = lapply(details, htmltools::HTML)
# Who is receiving HAART therapy? (Bar Graph) data 2
names(hiv_df2_noNA)[4] <- "Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Percent receiving`) %>%
top_n(10)
hightolow <- desc(Percent receiving))
hightolow <- receiving(-Percent receiving)
receiving(-Percent receiving)
receiving[with(receiving), order(-Percent receiving)),]
receiving[with(receiving), order(-Percent receiving)),]
names(hiv_df2_noNA)[4] <- "Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Percent receiving`) %>%
top_n(10)
no_of_death <- merge_hiv_df %>%
filter(Year == "2018") %>%
select(Year, Region, `AIDS(death)-Children and Adults`) %>%
top_n(10)
no_of_death <- merge_hiv_df %>%
filter(Year == "2018")
no_of_death <- merge_hiv_df
no_of_death <- merge_hiv_df %>%
filter(Year == "2018")
View(no_of_death)
no_of_death <- merge_hiv_df %>%
filter(Year == "2018")
rlang::last_error()
# What demographics around the world are not benefiting from HAART therapy? (Pie Chart)
no_of_death <- merge_hiv_df %>%
filter(Year == "2018")
no_of_death <- merge_hiv_df %>%
filter(Year == "2018")
no_of_death <- merge_hiv_df %>%
filter(Year == "2018") %>%
select(Year, Region, `AIDS(death)-Children and Adults`) %>%
top_n(9)
receiving <- merge_hiv_df %>%
filter(Year == "2018") %>%
select(Year, Region, `AIDS(death)-Children and Adults`) %>%
top_n(9)
receiving <- merge_hiv_df
receiving <- merge_hiv_df %>%
filter(Year == "2018")
receiving <- merge_hiv_df %>%
filter(Year == "2018")
receiving <- merge_hiv_df
receiving <- merge_hiv_df %>%
filter(Year == "2018")
receiving <- merge_hiv_df %>%
filter(Year == "2018") %>%
select(Year, Region, `AIDS(death)-Children and Adults`) %>%
top_n(9)
library(dplyr)
library(ggplot2)
# BF1 Midpoint Deliverable
## Introductory paragraph (Stassney)
### Introduction:
#### There are about 37.9 M people (ppl) globally affected by HIV today.
#### Every day there are more than 5,700 ppl who contracted HIV which is nearly 240 ppl/hour.
#### The purpose of this project is to:
#### - learn and show where in the world HIV is most common and
#### - to understand how the distribution of HIV treatment (HAART therapy) affects
####   the prevalence of HIV in certain parts of the world.
####     - Questions such as:
####       - Where in the world is HAART therapy most accessible? (Interactive Map Chart)
####       - Who is receiving HAART therapy? (Bar Graph)
####       - What demographics around the world are benefiting from HAART therapy? (Pie Chart)
####       - How accessibility to HAART therapy affects the prevalence of HIV in certain parts of the world?
### Data Source:
#### UNAIDS 2019 HIV estimates
"http://apps.who.int/gho/data/node.home"
#### UNAIDS 2019 HIV estimates treatments
"http://apps.who.int/gho/data/node.home"
## Summary Information (Maxine)
>>>>>>> 854442bcd480dd1d1779ee6f52452691716ae2c7
hiv_df1 <- read.csv("by_area_hiv_est_from_1990-present.csv", stringsAsFactors = FALSE)
hiv_df1 <- hiv_df1[-(1:4),]
colnames(hiv_df1) <- hiv_df1[1,]
colnames(hiv_df1)[1:2] <- c("Year","Location")
hiv_df1 <- hiv_df1[-1,]
<<<<<<< HEAD
names(hiv_df1)[3] <- "Region"
=======
View(hiv_df1)
>>>>>>> 854442bcd480dd1d1779ee6f52452691716ae2c7
hiv_df2 <- read.csv("by_area_hiv_treatment_est_from_1990-present.csv", stringsAsFactors = FALSE)
hiv_df2 <- hiv_df2[-(1:4),]
colnames(hiv_df2)<-hiv_df2[1,]
colnames(hiv_df2)[1:2] <- c("Year","Location")
hiv_df2 <- hiv_df2[-1,]
<<<<<<< HEAD
names(hiv_df2)[3] <- "Region"
dim(hiv_df1)
dim(hiv_df2)
intersect(colnames(hiv_df1),colnames(hiv_df2))
hiv_df2_noNA <- hiv_df2[-c(20:50)]
merge_hiv_df <- merge(x=hiv_df1, y=hiv_df2_noNA, by=c("Year","Location", "Region"))
dim(data)
View(merge_hiv_df)
=======
dim(hiv_df1)
dim(hiv_df2)
intersect(colnames(hiv_df1),colnames(hiv_df2))
View(hiv_df2)
## Merging two data frames together
merge_hiv_df <- merge(x=hiv_df1, y=hiv_df2, by=c("Year","Location"))
dim(data)
names(merge_hiv_df)[3] <- "Country"
## Changing for col namnes for "merge_hiv_df"
>>>>>>> 854442bcd480dd1d1779ee6f52452691716ae2c7
colnames(merge_hiv_df)[13] <- "AIDS(death)-Children and Adults"
colnames(merge_hiv_df)[14] <- "AIDS(death)-Children and Adults-LOW ESTIMATE."
colnames(merge_hiv_df)[14] <- "AIDS(death)-Children and Adults-HIGH ESTIMATE."
colnames(merge_hiv_df)[15] <- "AIDS(death)-Children and Adults-HIGH ESTIMATE."
colnames(merge_hiv_df)[16] <- "AIDS(death)-Children (0-14)."
colnames(merge_hiv_df)[15] <- "AIDS(death)-Children-LOW ESTIMATE."
colnames(merge_hiv_df)[15] <- "AIDS(death)-Children AND ADULTS-HIGH ESTIMATE."
colnames(merge_hiv_df)[17] <- "AIDS(death)-Children (0-14)-LOW ESTIMATE."
colnames(merge_hiv_df)[18] <- "AIDS(death)-Children (0-14)-HIGH ESTIMATE."
colnames(merge_hiv_df)[19] <- "AIDS(death)-Adults (15+)"
colnames(merge_hiv_df)[20] <- "AIDS(death)-Adults (15+)-LOW ESTIMATE"
colnames(merge_hiv_df)[21] <- "AIDS(death)-Adults (15+)-HIGH ESTIMATE"
colnames(merge_hiv_df)[40] <- "Mothers Needing Antiretrovirals"
colnames(merge_hiv_df)[41] <- "Mothers Needing Antiretrovirals-LOW ESTIMATE"
colnames(merge_hiv_df)[42] <- "Mothers Needing Antiretrovirals-HIGH ESTIMATE"
<<<<<<< HEAD
merge_hiv_df[merge_hiv_df == "..."] <- NA
hiv_worldwide <- merge_hiv_df %>%
filter(Region == max(Region)) %>%
select(Region,"Estimated adults (15+) living with HIV")
hiv_worldwide <- hiv_df2_noNA %>%
filter(Region == max(Region))%>%
select(Year, Region, `Percent of People all ages living with HIV receiving ART`)
hiv_worldwide <- merge_hiv_df %>%
filter( Year == max(Year)) %>%
select( 'Number of adults (15+) receiving ART', `Number of children (0-14) receiving ART`) %>%
filter( `Number of children (0-14) receiving ART` == max(`Number of children (0-14) receiving ART`))
hiv_worldwide <- hiv_df2_noNA %>%
filter( Region < 500) %>%
select(Year, Region, `Number of adults (15+) receiving ART`, `Number of children (0-14) receiving ART`)
filter(Region == min(Region))
hiv_worldwide <- merge_hiv_df %>%
filter(Region == max(Region))%>%
select( Region , 'Number of adults (15+) receiving ART', `Adult (15-49) prevalence (%)`)
nrow(merge_hiv_df)
ncol(merge_hiv_df)
summary(merge_hiv_df)
max_mother_haart <- merge_hiv_df %>%
group_by(Year) %>%
mutate(Total_death == as.numeric(`Mothers Needing Antiretrovirals`) ) %>%
summarize(Total_death = max(`Mothers Needing Antiretrovirals`))
View(hiv_df2_noNA)
View(hiv_df2)
View(hiv_df2_noNA)
names(merge_hiv_df)[13] <- "Total_death"
names(merge_hiv_df)[1] <- "Year"
max_mother_haart <- merge_hiv_df %>%
group_by(Year) %>%
mutate(Total_death == as.numeric(`Mothers Needing Antiretrovirals`) ) %>%
summarize(Total_death = max(`Mothers Needing Antiretrovirals`))
merge_hiv_df <- arrange(merge_hiv_df, desc(Total_death))
names(merge_hiv_df)[13] <- "Total_death"
names(merge_hiv_df)[1] <- "Year"
relevant_info_df <- merge_hiv_df %>%
select(Year:Total_death, -Location)
library(shiny)
renderTable(expr, striped = FALSE, hover = FALSE, bordered = FALSE,
spacing = c("s"), width = "auto", align = NULL,
rownames = FALSE, colnames = TRUE, digits = NULL, na = "NA",
env = merge_hiv_df, quoted = FALSE, outputArgs = merge_hiv_df)
x <- receiving$Region
y<- receiving$`Percent of people receiving ART`
mapping = aes(x = receiving$Region, y = receiving$`Percent of people receiving ART`),
#### The chart above represents how HAART is accessible to different
#### regions of the world, in 2018. This type of chart is
#### especially useful when you want to demonstrate several
#### trends or numbers. Our chart indicates that Spain and Jordan have
####  the percentage of people receiving HAART
####  Italy, Namibia have the highest percentage of people.
####  receiving HAART. Spain has the lowest percentage
####  Our chart shows that spain has 84 percent
#### receiving Art, while Nambia has 92 %.
#### Question 2: Who is receiving HAART therapy?
#### (Bar plot)
names(hiv_df2_noNA)[4] <- "Percent of people receiving ART"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Percent of people receiving ART`) %>%
top_n(10)
name <- c("Eswatini", "Madagascar", "Namibia", " Rwanda","Zimbabwe", "Jordan",
"Cape Verde", "Denmark", "Italy", "Portugal", "Spain")
num <- c(86, 9, 92, 87, 88, 84, 89, 89, 91, 90, 84)
receiving_therapy <- barplot(
num, names.arg = name,xlab = "Region", ylab = "People receiving HAART therapy",
col = "blue", main = "Percent of people Receiving HAART")
x <- receiving$Region
y<- receiving$`Percent of people receiving ART`
most_accessible <- ggplot(data = receiving) +
geom_smooth (
most_accessible <- ggplot(data = receiving) +
mapping = aes(x = receiving$Region, y = receiving$`Percent of people receiving ART`),
#### The chart above represents how HAART is accessible to different
#### regions of the world, in 2018. This type of chart is
#### especially useful when you want to demonstrate several
#### trends or numbers. Our chart indicates that Spain and Jordan have
####  the percentage of people receiving HAART
####  Italy, Namibia have the highest percentage of people.
####  receiving HAART. Spain has the lowest percentage
####  Our chart shows that spain has 84 percent
#### receiving Art, while Nambia has 92 %.
#### Question 2: Who is receiving HAART therapy?
#### (Bar plot)
names(hiv_df2_noNA)[4] <- "Percent of people receiving ART"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Percent of people receiving ART`) %>%
top_n(10)
name <- c("Eswatini", "Madagascar", "Namibia", " Rwanda","Zimbabwe", "Jordan",
"Cape Verde", "Denmark", "Italy", "Portugal", "Spain")
num <- c(86, 9, 92, 87, 88, 84, 89, 89, 91, 90, 84)
receiving_therapy <- barplot(
num, names.arg = name,xlab = "Region", ylab = "People receiving HAART therapy",
col = "blue", main = "Percent of people Receiving HAART")
not_benefiting <- merge_hiv_df %>%
filter(Year == "2018") %>%
select(Year, Region, `Total_death`) %>%
top_n(10)
name_1 <- c("Middle East and North Africa",  "Gambia", "Honduras",
"Italy", "Myanmar", "Nepal", "Paraguay", "Somalia", "South Sudan")
num_1 <- c(8400, 980,780, 710, 7800, 910, 720, 710, 9900)
demographics_therapy <- pie(num_1, labels = num_1 , main = "Demographics not benefiting from therapy",
col = rainbow(length(num_1)))
legend("topleft", c("Middle East and North Africa", "Gambia",
"Honduras", "Italy", "Myanmar", "Nepal", "Paraguay", "Somalia", "South Sudan"), cex = 0.8,
fill = rainbow(length(num_1)))
mapping = aes(x = receiving$Region, y = receiving$`Percent of people receiving ART`),
View(most_accessible)
most_accessible <- ggplot(data = receiving) +
mapping = aes(x = receiving$Region, y = receiving$`Percent of people receiving ART`),
#### The chart above represents how HAART is accessible to different
#### regions of the world, in 2018. This type of chart is
#### especially useful when you want to demonstrate several
#### trends or numbers. Our chart indicates that Spain and Jordan have
####  the percentage of people receiving HAART
####  Italy, Namibia have the highest percentage of people.
####  receiving HAART. Spain has the lowest percentage
####  Our chart shows that spain has 84 percent
#### receiving Art, while Nambia has 92 %.
#### Question 2: Who is receiving HAART therapy?
#### (Bar plot)
names(hiv_df2_noNA)[4] <- "Percent of people receiving ART"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Percent of people receiving ART`) %>%
top_n(10)
name <- c("Eswatini", "Madagascar", "Namibia", " Rwanda","Zimbabwe", "Jordan",
"Cape Verde", "Denmark", "Italy", "Portugal", "Spain")
num <- c(86, 9, 92, 87, 88, 84, 89, 89, 91, 90, 84)
receiving_therapy <- barplot(
num, names.arg = name,xlab = "Region", ylab = "People receiving HAART therapy",
col = "blue", main = "Percent of people Receiving HAART")
not_benefiting <- merge_hiv_df %>%
filter(Year == "2018") %>%
select(Year, Region, `Total_death`) %>%
top_n(10)
name_1 <- c("Middle East and North Africa",  "Gambia", "Honduras",
"Italy", "Myanmar", "Nepal", "Paraguay", "Somalia", "South Sudan")
num_1 <- c(8400, 980,780, 710, 7800, 910, 720, 710, 9900)
demographics_therapy <- pie(num_1, labels = num_1 , main = "Demographics not benefiting from therapy",
col = rainbow(length(num_1)))
legend("topleft", c("Middle East and North Africa", "Gambia",
"Honduras", "Italy", "Myanmar", "Nepal", "Paraguay", "Somalia", "South Sudan"), cex = 0.8,
fill = rainbow(length(num_1)))
#### The chart above represents a few regions that are not getting access of HAART
#### The chart above represents a few regions that are not getting access of HAART
#### and thus not benefiting from it. Pie charts are especially useful to show
#### The chart above represents a few regions that are not getting access of HAART
#### and thus not benefiting from it. Pie charts are especially useful to show
#### propotional data that is represented by each category that is provided to
#### The chart above represents a few regions that are not getting access of HAART
#### and thus not benefiting from it. Pie charts are especially useful to show
#### propotional data that is represented by each category that is provided to
#### the legend in top left.
#### The chart above represents a few regions that are not getting access of HAART
#### and thus not benefiting from it. Pie charts are especially useful to show
#### propotional data that is represented by each category that is provided to
#### the legend in top left.
"http://apps.who.int/gho/data/node.home"
"http://apps.who.int/gho/data/node.home"
=======
View(merge_hiv_df)
#Null
merge_hiv_df[merge_hiv_df == "..."] <- NA
## Summary Information (**15 points**) (Maxine)
Computes (and includes) 5 pieces of _relevant_ information using a function saved in a `script/` file. For each piece of information, make sure to:
- Compute the information accurately in the script (**1 point**)
- Include the piece of information using in-line R code in the paragraph (**1 point**)
- Make clear the relevance of including the information (if not apparent) (**1 point**)
## Summary Table (**10 points**) (Stassney)
- Introduces the table, explaining why the particular grouping calculation was performed (**2 points**)
####
- Creates a summarized data frame to include as the table using `group_by()` (**2 points**)
- Intentionally sorts the table in a relevant way (**1 point**)
- Only displays relevant columns in the table (**1 point**)
- Displays well formatted column names (**1 point**)
- Successfully renders the table in the report using an appropriate package
# (e.g., don't just print out the data frame) (**1 point**)
- Interprets information the table, honing in on important information (**2 points**)
## Charts (**30 points**, 10 points each) (Khayla & An)
For each chart, you will be evaluated based on the following (remember, each chart must be a **different chart type**):
<<<<<<< HEAD
# Where in the world is HAART therapy most accessible? (Interactive Map Chart)
=======
##testing
>>>>>>> c9943a69f8ff7a00849f88dff23c72ec4019d968
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = data$long, lat = data$lat, radius = data$total,
label = lapply(details, htmltools::HTML)
# Who is receiving HAART therapy? (Bar Graph) data 2
receiving <- merge_hiv_df %>%
filter(Year == "2018") %>%
select(Year, Region, `AIDS(death)-Children and Adults`) %>%
top_n(9)
receiving <-ggplot(, aes(, ))
receiving +geom_bar(stat = "identity")
View(receiving)
# What demographics around the world are benefiting from HAART therapy? (Pie Chart)
demographics <- ggplot(, aes(x = "", fill = factor(class))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of Denographics",
caption="Benefiting from HAART Treatment")
- A description of what the chart attempts to answer/understand (**1 point**)
- Selected the appropriate chart type / graphical encoding based on the question of interest and the data type(s) of the features (**3 point**)
- Appropriate labels/legends, depending on your chart type (**4 points**). Including, but not limited to:
- X axis label (if there's an x axis)
- Y axis label (if there's an y axis)
- Title (if there's an ability to add a title -- e.g., not a map)
- Legend for any encodings that are not immediately apparent
- Interprets information from the chart, honing in on important information (**2 points**)
## Code and Report structure (**7 points**) (Maxine & Stassney)
Code is broken up appropriately into the described files.
- Each file is in the appropriate folder: `scripts/`, except `index.Rmd`, which is in the root (**1 point**)
- Each file is loaded into the `index.Rmd` file (**1 point**)
- Only the `index.Rmd` file loads the data (**1 point**)
- Project uses appropriate packages and logic throughout to produce the report (**1 points**)
- All unused code is removed. (**1 point**)
- Comments are used throughout to express purpose of each section (**1 point**)
Report is professionally formatted, including (but not limtted to):
- Using headers to delineate between sections (**1 point**)
- Removing any warnings/messages from your script in the report (**1 point**)
## Code clarity (**5 points**) (Khayla & Anura)
To earn full points, you must not have any `lintr()` errors.
receiving <- merge_hiv_df %>%
filter(Year == "2018") %>%
select(Year, Region, `AIDS(death)-Children and Adults`) %>%
top_n(9)
receiving <- merge_hiv_df
receiving <- merge_hiv_df %>%
filter(Year == "2018")
receiving <- merge_hiv_df %>%
filter(Year == "2018") %>%
select(Year, Region, `AIDS(death)-Children and Adults`)
names(hiv_df2_noNA)[4] <- "Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Percent receiving`) %>%
top_n(10)
names(hiv_df2_noNA)[4] <- "Percent receiving"
library(dplyr)
library(ggplot2)
# BF1 Midpoint Deliverable
## Introductory paragraph (Stassney)
### Introduction:
#### There are about 37.9 M people (ppl) globally affected by HIV today.
#### Every day there are more than 5,700 ppl who contracted HIV which is nearly 240 ppl/hour.
#### The purpose of this project is to:
#### - learn and show where in the world HIV is most common and
#### - to understand how the distribution of HIV treatment (HAART therapy) affects
####   the prevalence of HIV in certain parts of the world.
####     - Questions such as:
####       - Where in the world is HAART therapy most accessible? (Interactive Map Chart)
####       - Who is receiving HAART therapy? (Bar Graph)
####       - What demographics around the world are benefiting from HAART therapy? (Pie Chart)
####       - How accessibility to HAART therapy affects the prevalence of HIV in certain parts of the world?
### Data Source:
#### UNAIDS 2019 HIV estimates
"http://apps.who.int/gho/data/node.home"
#### UNAIDS 2019 HIV estimates treatments
"http://apps.who.int/gho/data/node.home"
## Summary Information (Maxine)
>>>>>>> 854442bcd480dd1d1779ee6f52452691716ae2c7
hiv_df1 <- read.csv("by_area_hiv_est_from_1990-present.csv", stringsAsFactors = FALSE)
hiv_df1 <- hiv_df1[-(1:4),]
colnames(hiv_df1) <- hiv_df1[1,]
colnames(hiv_df1)[1:2] <- c("Year","Location")
hiv_df1 <- hiv_df1[-1,]
<<<<<<< HEAD
names(hiv_df1)[3] <- "Region"
=======
View(hiv_df1)
>>>>>>> 854442bcd480dd1d1779ee6f52452691716ae2c7
hiv_df2 <- read.csv("by_area_hiv_treatment_est_from_1990-present.csv", stringsAsFactors = FALSE)
hiv_df2 <- hiv_df2[-(1:4),]
colnames(hiv_df2)<-hiv_df2[1,]
colnames(hiv_df2)[1:2] <- c("Year","Location")
hiv_df2 <- hiv_df2[-1,]
<<<<<<< HEAD
names(hiv_df2)[3] <- "Region"
dim(hiv_df1)
dim(hiv_df2)
intersect(colnames(hiv_df1),colnames(hiv_df2))
hiv_df2_noNA <- hiv_df2[-c(20:50)]
merge_hiv_df <- merge(x=hiv_df1, y=hiv_df2_noNA, by=c("Year","Location", "Region"))
dim(data)
View(merge_hiv_df)
=======
dim(hiv_df1)
dim(hiv_df2)
intersect(colnames(hiv_df1),colnames(hiv_df2))
View(hiv_df2)
## Merging two data frames together
merge_hiv_df <- merge(x=hiv_df1, y=hiv_df2, by=c("Year","Location"))
dim(data)
names(merge_hiv_df)[3] <- "Country"
## Changing for col namnes for "merge_hiv_df"
>>>>>>> 854442bcd480dd1d1779ee6f52452691716ae2c7
colnames(merge_hiv_df)[13] <- "AIDS(death)-Children and Adults"
colnames(merge_hiv_df)[14] <- "AIDS(death)-Children and Adults-LOW ESTIMATE."
colnames(merge_hiv_df)[14] <- "AIDS(death)-Children and Adults-HIGH ESTIMATE."
colnames(merge_hiv_df)[15] <- "AIDS(death)-Children and Adults-HIGH ESTIMATE."
colnames(merge_hiv_df)[16] <- "AIDS(death)-Children (0-14)."
colnames(merge_hiv_df)[15] <- "AIDS(death)-Children-LOW ESTIMATE."
colnames(merge_hiv_df)[15] <- "AIDS(death)-Children AND ADULTS-HIGH ESTIMATE."
colnames(merge_hiv_df)[17] <- "AIDS(death)-Children (0-14)-LOW ESTIMATE."
colnames(merge_hiv_df)[18] <- "AIDS(death)-Children (0-14)-HIGH ESTIMATE."
colnames(merge_hiv_df)[19] <- "AIDS(death)-Adults (15+)"
colnames(merge_hiv_df)[20] <- "AIDS(death)-Adults (15+)-LOW ESTIMATE"
colnames(merge_hiv_df)[21] <- "AIDS(death)-Adults (15+)-HIGH ESTIMATE"
colnames(merge_hiv_df)[40] <- "Mothers Needing Antiretrovirals"
colnames(merge_hiv_df)[41] <- "Mothers Needing Antiretrovirals-LOW ESTIMATE"
colnames(merge_hiv_df)[42] <- "Mothers Needing Antiretrovirals-HIGH ESTIMATE"
View(merge_hiv_df)
<<<<<<< HEAD
=======
#Null
merge_hiv_df[merge_hiv_df == "..."] <- NA
## Summary Information (**15 points**) (Maxine)
Computes (and includes) 5 pieces of _relevant_ information using a function saved in a `script/` file. For each piece of information, make sure to:
- Compute the information accurately in the script (**1 point**)
- Include the piece of information using in-line R code in the paragraph (**1 point**)
- Make clear the relevance of including the information (if not apparent) (**1 point**)
## Summary Table (**10 points**) (Stassney)
- Introduces the table, explaining why the particular grouping calculation was performed (**2 points**)
####
- Creates a summarized data frame to include as the table using `group_by()` (**2 points**)
- Intentionally sorts the table in a relevant way (**1 point**)
- Only displays relevant columns in the table (**1 point**)
- Displays well formatted column names (**1 point**)
- Successfully renders the table in the report using an appropriate package
# (e.g., don't just print out the data frame) (**1 point**)
- Interprets information the table, honing in on important information (**2 points**)
## Charts (**30 points**, 10 points each) (Khayla & An)
For each chart, you will be evaluated based on the following (remember, each chart must be a **different chart type**):
<<<<<<< HEAD
# Where in the world is HAART therapy most accessible? (Interactive Map Chart)
=======
##testing
>>>>>>> c9943a69f8ff7a00849f88dff23c72ec4019d968
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = data$long, lat = data$lat, radius = data$total,
label = lapply(details, htmltools::HTML)
# Who is receiving HAART therapy? (Bar Graph) data 2
names(hiv_df2_noNA)[4] <- "Percent receiving"
receiving <- hiv_df2_noNA %>%
filter(Year == "2018") %>%
select(Year, Region, `Percent receiving`) %>%
top_n(10)
receiving <-ggplot(, aes(, ))
receiving +geom_bar(stat = "identity")
View(receiving)
# What demographics around the world are not benefiting from HAART therapy? (Pie Chart)
receiving <- merge_hiv_df %>%
filter(Year == "2018") %>%
select(Year, Region, `AIDS(death)-Children and Adults`) %>%
top_n(9)
demographics <- ggplot(, aes(x = "", fill = factor(class))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of Denographics",
caption="Benefiting from HAART Treatment")
- A description of what the chart attempts to answer/understand (**1 point**)
- Selected the appropriate chart type / graphical encoding based on the question of interest and the data type(s) of the features (**3 point**)
- Appropriate labels/legends, depending on your chart type (**4 points**). Including, but not limited to:
- X axis label (if there's an x axis)
- Y axis label (if there's an y axis)
- Title (if there's an ability to add a title -- e.g., not a map)
- Legend for any encodings that are not immediately apparent
- Interprets information from the chart, honing in on important information (**2 points**)
## Code and Report structure (**7 points**) (Maxine & Stassney)
Code is broken up appropriately into the described files.
- Each file is in the appropriate folder: `scripts/`, except `index.Rmd`, which is in the root (**1 point**)
- Each file is loaded into the `index.Rmd` file (**1 point**)
- Only the `index.Rmd` file loads the data (**1 point**)
- Project uses appropriate packages and logic throughout to produce the report (**1 points**)
- All unused code is removed. (**1 point**)
- Comments are used throughout to express purpose of each section (**1 point**)
Report is professionally formatted, including (but not limtted to):
- Using headers to delineate between sections (**1 point**)
- Removing any warnings/messages from your script in the report (**1 point**)
## Code clarity (**5 points**) (Khayla & Anura)
To earn full points, you must not have any `lintr()` errors.
View(hiv_df2)
names(hiv_df2_noNA)[4] <- "Percent receiving"
names(hiv_df2_noNA)[4] <- "Percent receiving"
receiving <- hiv_df2_noNA
>>>>>>> 854442bcd480dd1d1779ee6f52452691716ae2c7
